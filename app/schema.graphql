type  Query {
	# prueba:String
	User:[User]
	# User(id:ID!):User
	
}

type Mutation {
	# signup(data:UserCreateInput!):Auth
	# login(email:String!,password:String!):Auth
	# updateUser(id:ID,data:UserUpdateInput!):User
	# deleteUser(id:ID):String
	updateUser(id:ID,data:UserUpdateInput!):User
	signup(data:UserCreateInput!):Auth
}

type Auth{
	token:String
	message:String
}

type User{
	_id:ID
	name:String
	last_name:String
	email:String
	gender:GENDER
	password:String
	create_at:String
	is_active:Boolean
}



enum GENDER {
	Male
	Female
}

# enum  CATEGORIES{
# 	TECH
# 	DEV
# 	GAME
# 	HEALTH
# }

input UserCreateInput {
	name:String!
	last_name:String!
	email:String!
	password:String!
}

input UserUpdateInput{
	name:String
	last_name:String
	email:String
	password:String
	gender:GENDER
	is_active:Boolean

}