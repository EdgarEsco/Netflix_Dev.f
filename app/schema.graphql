type  Query {
	# prueba:String
	User:[User]
	Movie:[Movie]

	
}

type Mutation {
	# signup(data:UserCreateInput!):Auth
	# login(email:String!,password:String!):Auth
	# updateUser(id:ID,data:UserUpdateInput!):User
	# deleteUser(id:ID):String
	updateUser(_id:ID,data:UserUpdateInput!):User
	signup(data:UserCreateInput!):Auth
	addMovie(_id:ID, data:MovieAdd!):Movie
}

type Auth{
	token:String
	message:String
}

type User{
	_id:ID
	name:String
	last_name:String
	email:String
	gender:GENDER
	password:String
	create_at:String
	is_active:Boolean
}

type Movie{
	_id: ID
	title: String
	director:String
	categories:String
	sinopsis:String
	poster:String	
	video_url:String	

}


enum GENDER {
	Male
	Female
}

enum  CATEGORIES{
	Comedia 
	Drama 
	Accion
	Romantica 
	Terror
	Deportes
}

input UserCreateInput {
	name:String!
	last_name:String!
	email:String!
	password:String!
}

input UserUpdateInput{
	_id:ID
	name:String
	last_name:String
	email:String
	password:String
	gender:GENDER
	is_active:Boolean

}

input MovieAdd{

	title: String
	director:String
	categories:String
	sinopsis:String
	poster:String	
	video_url:String	
}